#include <xc.h>
#define _XTAL_FREQ 20000000

#define PIR RD1
#define buzzer RB0
#define led RB1
#define RS RB3
#define RW RB4
#define EN RB5 // waire conetion

void lcd_data(unsigned char data) {
    PORTC = data;
    RS = 1; // RS is working on character mode
    RW = 0; // Write function
    EN = 1; // Enabling the LCD
    __delay_ms(100);
    EN = 0;

}

void lcd_command(unsigned char cmd) {
    PORTC = cmd;
    RS = 0; // RS is working on character mode
    RW = 0; // Write function
    EN = 1; // Enabling the LCD
    __delay_ms(100);
    EN = 0;

}

void lcd_string(unsigned char *str, unsigned char num) {
    unsigned char i;
    for (i = 0; i < num; i++) {

        lcd_data(str[i]);
    }
}

void lcd_getup() {

    lcd_command(0x38); // 2 line and 5*7 matrix
    lcd_command(0x06); // Increment cursor (shift cursor to right)
    lcd_command(0x0C); // Display on , cursor off
    lcd_command(0x01); // clear display screen
}

void main(void) {

    TRISC = 0x00; // all B port output
    TRISB0 = 0; // buzzer
    TRISB1 = 0; //led
    TRISB3 = 0; // lcd output
    TRISB4 = 0;
    TRISB5 = 0;
    TRISD1 = 0; //pir

    lcd_getup();

    while (1) {

        if (PIR == 1) {

            buzzer = 1;
            led = 1;

            lcd_command(0x83); // position 1st row 
            lcd_string("Motion",7);
            lcd_command(0xC3); // position 2nd row      
            lcd_string("Detected!",9);
            __delay_ms(100);
            lcd_command(0x01); // clear  
        }

        else{
            buzzer = 0;
            led = 0;

            lcd_command(0x83); // position 1st row 
            lcd_string("Motion",7);
            lcd_command(0xC3); // position 2nd row      
            lcd_string("NOT Detected!",13);
            __delay_ms(100);
            lcd_command(0x01); // clear  
        }

    }

    return;
}



